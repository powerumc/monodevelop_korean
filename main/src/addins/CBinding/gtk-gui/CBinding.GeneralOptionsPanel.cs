
// This file has been generated by the GUI designer. Do not modify.
namespace CBinding
{
	public partial class GeneralOptionsPanel
	{
		private global::Gtk.Table table1;
		
		private global::Gtk.ComboBox cCombo;
		
		private global::Gtk.ComboBox cppCombo;
		
		private global::Gtk.Button ctagsBrowse;
		
		private global::Gtk.HBox hboxBtnBrowse;
		
		private global::MonoDevelop.Components.ImageView ctagsBrowseIcon;
		
		private global::Gtk.Label ctagsBrowselabel;
		
		private global::Gtk.Entry ctagsEntry;
		
		private global::Gtk.Label label1;
		
		private global::Gtk.Label label2;
		
		private global::Gtk.Label label3;
		
		private global::Gtk.CheckButton parseLocalVariablesCheck;
		
		private global::Gtk.CheckButton parseSystemTagsCheck;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget CBinding.GeneralOptionsPanel
			global::Stetic.BinContainer.Attach (this);
			this.Name = "CBinding.GeneralOptionsPanel";
			// Container child CBinding.GeneralOptionsPanel.Gtk.Container+ContainerChild
			this.table1 = new global::Gtk.Table (((uint)(5)), ((uint)(3)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.cCombo = global::Gtk.ComboBox.NewText ();
			this.cCombo.TooltipMarkup = "Default compiler to use for new C projects.";
			this.cCombo.Name = "cCombo";
			this.table1.Add (this.cCombo);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.cCombo]));
			w1.LeftAttach = ((uint)(1));
			w1.RightAttach = ((uint)(2));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.cppCombo = global::Gtk.ComboBox.NewText ();
			this.cppCombo.TooltipMarkup = "Default compiler to use for new C++ projects.";
			this.cppCombo.Name = "cppCombo";
			this.table1.Add (this.cppCombo);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.cppCombo]));
			w2.TopAttach = ((uint)(1));
			w2.BottomAttach = ((uint)(2));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(2));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ctagsBrowse = new global::Gtk.Button ();
			this.ctagsBrowse.CanFocus = true;
			this.ctagsBrowse.Name = "ctagsBrowse";
			// Container child ctagsBrowse.Gtk.Container+ContainerChild
			this.hboxBtnBrowse = new global::Gtk.HBox ();
			this.hboxBtnBrowse.Name = "hboxBtnBrowse";
			this.hboxBtnBrowse.Spacing = 2;
			// Container child hboxBtnBrowse.Gtk.Box+BoxChild
			this.ctagsBrowseIcon = new global::MonoDevelop.Components.ImageView ();
			this.ctagsBrowseIcon.Name = "ctagsBrowseIcon";
			this.ctagsBrowseIcon.IconId = "gtk-open";
			this.ctagsBrowseIcon.IconSize = ((global::Gtk.IconSize)(1));
			this.hboxBtnBrowse.Add (this.ctagsBrowseIcon);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hboxBtnBrowse [this.ctagsBrowseIcon]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			// Container child hboxBtnBrowse.Gtk.Box+BoxChild
			this.ctagsBrowselabel = new global::Gtk.Label ();
			this.ctagsBrowselabel.Name = "ctagsBrowselabel";
			this.ctagsBrowselabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Browse");
			this.ctagsBrowselabel.UseUnderline = true;
			this.hboxBtnBrowse.Add (this.ctagsBrowselabel);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hboxBtnBrowse [this.ctagsBrowselabel]));
			w4.Position = 1;
			w4.Expand = false;
			w4.Fill = false;
			this.ctagsBrowse.Add (this.hboxBtnBrowse);
			this.table1.Add (this.ctagsBrowse);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.ctagsBrowse]));
			w6.TopAttach = ((uint)(2));
			w6.BottomAttach = ((uint)(3));
			w6.LeftAttach = ((uint)(2));
			w6.RightAttach = ((uint)(3));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ctagsEntry = new global::Gtk.Entry ();
			this.ctagsEntry.CanFocus = true;
			this.ctagsEntry.Name = "ctagsEntry";
			this.ctagsEntry.IsEditable = true;
			this.ctagsEntry.InvisibleChar = '‚óè';
			this.table1.Add (this.ctagsEntry);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1 [this.ctagsEntry]));
			w7.TopAttach = ((uint)(2));
			w7.BottomAttach = ((uint)(3));
			w7.LeftAttach = ((uint)(1));
			w7.RightAttach = ((uint)(2));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.Xpad = 10;
			this.label1.Xalign = 1F;
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Default C Compiler:");
			this.table1.Add (this.label1);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table1 [this.label1]));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.Xpad = 10;
			this.label2.Xalign = 1F;
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("Default C++ Compiler:");
			this.table1.Add (this.label2);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.table1 [this.label2]));
			w9.TopAttach = ((uint)(1));
			w9.BottomAttach = ((uint)(2));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label3 = new global::Gtk.Label ();
			this.label3.Name = "label3";
			this.label3.Xpad = 10;
			this.label3.Xalign = 1F;
			this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("CTags: ");
			this.label3.Justify = ((global::Gtk.Justification)(1));
			this.table1.Add (this.label3);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.table1 [this.label3]));
			w10.TopAttach = ((uint)(2));
			w10.BottomAttach = ((uint)(3));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.parseLocalVariablesCheck = new global::Gtk.CheckButton ();
			this.parseLocalVariablesCheck.CanFocus = true;
			this.parseLocalVariablesCheck.Name = "parseLocalVariablesCheck";
			this.parseLocalVariablesCheck.Label = global::Mono.Unix.Catalog.GetString ("Parse Local Variables");
			this.parseLocalVariablesCheck.DrawIndicator = true;
			this.parseLocalVariablesCheck.UseUnderline = true;
			this.table1.Add (this.parseLocalVariablesCheck);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.table1 [this.parseLocalVariablesCheck]));
			w11.TopAttach = ((uint)(4));
			w11.BottomAttach = ((uint)(5));
			w11.XPadding = ((uint)(10));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.parseSystemTagsCheck = new global::Gtk.CheckButton ();
			this.parseSystemTagsCheck.TooltipMarkup = "Choose whether you want to parse system tags or not, if you do you will get completion for things like printf, but the tag parsing process will take considerably longer.";
			this.parseSystemTagsCheck.CanFocus = true;
			this.parseSystemTagsCheck.Name = "parseSystemTagsCheck";
			this.parseSystemTagsCheck.Label = global::Mono.Unix.Catalog.GetString ("Parse System Tags");
			this.parseSystemTagsCheck.DrawIndicator = true;
			this.parseSystemTagsCheck.UseUnderline = true;
			this.table1.Add (this.parseSystemTagsCheck);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table1 [this.parseSystemTagsCheck]));
			w12.TopAttach = ((uint)(3));
			w12.BottomAttach = ((uint)(4));
			w12.XPadding = ((uint)(10));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.table1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Show ();
			this.ctagsBrowse.Clicked += new global::System.EventHandler (this.OnCtagsBrowseClicked);
			this.cppCombo.Changed += new global::System.EventHandler (this.OnCppComboChanged);
			this.cCombo.Changed += new global::System.EventHandler (this.OnCComboChanged);
		}
	}
}
